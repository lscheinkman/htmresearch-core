#---------------------------------#
#      general configuration      #
#---------------------------------#

# FIXME: RES-776 - Temporary fix cmake incompatibilities
image: Previous Visual Studio 2017

# version format
version: '{build}'

branches:
  except:
    - gh-pages

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# http://www.appveyor.com/docs/environment-variables
# http://www.appveyor.com/docs/installed-software

init:
  - git config --global core.autocrlf input

# Can't have a shallow clone because the CMake process will be
# calling into git to write the current SHA into the binaries.
shallow_clone: false
clone_folder: c:\projects\htmresearch-core
clone_depth: 1

environment:
  COMPILER_FAMILY: GCC
  EXTERNAL_WINDOWS_DIR: "%APPVEYOR_BUILD_FOLDER%\\external\\%EXTERNAL_STATIC_SUBDIR%"
  PYTHONPATH: "%PYTHONHOME%"
  PATH: "%PYTHONHOME%\\Scripts;%PYTHONHOME%;%PATH%"

  matrix:
    # Win64-gcc
    - PYTHON_VERSION: "2.7.13"
      PYTHON_ARCH: "64"
      PYTHONHOME: "C:\\Python27-x64"
      NC_CMAKE_GENERATOR: "MinGW Makefiles"
      EXTERNAL_STATIC_SUBDIR: "windows64-gcc"
      WHEEL_NAME_SUFFIX: "win_amd64"

    # Win32-gcc
    # - PYTHON_VERSION: "2.7.13"
    #   PYTHON_ARCH: "32"
    #   PYTHONHOME: "C:\\Python27"
    #   NC_CMAKE_GENERATOR: "MinGW Makefiles"
    #   EXTERNAL_STATIC_SUBDIR: "windows32-gcc"
    #   WHEEL_NAME_SUFFIX: "win32"

#---------------------------------#
#       build configuration       #
#---------------------------------#

# configuration values must be compatible with CMAKE_BUILD_TYPE: Debug or Release
configuration: Release

install:
  - python -m pip install --upgrade pip
  - python -m pip install --upgrade setuptools wheel
  - python -m pip install -r bindings/py/requirements.txt 

  # Install the version of mingwpy toolchain that generates targets compatible
  # with the installed python (Win32 vs. Win64). The compiler tools are
  # installed into %PYTHONHOME%/Scripts/
  - python -m pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy==0.1.0b3

  # Setup MinGW GCC as a valid distutils compiler
  - copy %EXTERNAL_WINDOWS_DIR%\bin\distutils.cfg %PYTHONHOME%\Lib\distutils\distutils.cfg

  # Remove sh.exe from the paths (CMake doesn't like it)
  - ren "C:\Program Files\Git\usr\bin\sh.exe" "git_sh.exe"

before_build:
  # Configure cmake for the current configuration
  - cmd: |
      cmake --version
      mkdir %APPVEYOR_BUILD_FOLDER%\build\%CONFIGURATION%
      mkdir %APPVEYOR_BUILD_FOLDER%\build\scripts
      cd %APPVEYOR_BUILD_FOLDER%\build\scripts
      cmake -G "%NC_CMAKE_GENERATOR%" -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%\build\%CONFIGURATION% -DPY_EXTENSIONS_DIR=%APPVEYOR_BUILD_FOLDER%\bindings\py\src\htmresearch_core %APPVEYOR_BUILD_FOLDER%

build_script:
  # Build C++ library
  - cmd: |
      cd %APPVEYOR_BUILD_FOLDER%\build\scripts
      cmake.exe --build "%APPVEYOR_BUILD_FOLDER%\build\scripts" --target install --config %configuration%
  
  # Build python wheel
  - cmd: |
      cd %APPVEYOR_BUILD_FOLDER%
      python setup.py bdist_wheel

before_test:
 - pip install --no-index --find-links=%APPVEYOR_BUILD_FOLDER%\bindings\py\dist htmresearch-core

test_script:
  # C++ tests
  - ps: |
      cd build\$env:CONFIGURATION\bin\
      .\unit_tests.exe --gtest_output=xml:unit_tests_report.xml
      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path unit_tests_report.xml))

  # python tests
  - ps: |
      cd $env:APPVEYOR_BUILD_FOLDER
      py.test --junitxml=py_test_report.xml bindings/py/tests
      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path py_test_report.xml))

after_test:
  - cmd: |
      for /f %%i in ('type VERSION') do set VERSION=%%i
      copy %APPVEYOR_BUILD_FOLDER%\bindings\py\dist\htmresearch_core-%VERSION%-cp27-cp27m-%WHEEL_NAME_SUFFIX%.whl %APPVEYOR_BUILD_FOLDER%\htmresearch_core-%APPVEYOR_REPO_COMMIT%-cp27-none-%WHEEL_NAME_SUFFIX%.whl

artifacts:
  - path: '*.whl'
    name: htmresearch_core 

deploy:
  - provider: S3
    access_key_id:
     secure: /9U0mCHp3k1U8Y5CY/kDqwCKG2gqchG/T/UlVWo8SME=
    secret_access_key:
      secure: /8wO17Gir0XAiecJkHeE3jxOJzvyl0+uWcl7BKCuN0FC795golsL8905VmNuRl1o
    bucket: artifacts.numenta.org
    region: us-west-2
    set_public: true
    artifact: htmresearch_core
    folder: numenta/htmresearch-core/appveyor
    on:
      # Deploy only from master of the main repo. Ignore forks and branches
      appveyor_repo_name: numenta/htmresearch-core
      branch: master
